<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        https://www.springframework.org/schema/data/jpa/spring-jpa.xsd
">
    <!--对Spring Data JPA配置步骤-->
    <!--
        1.配置数据源
    -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/lagou?characterEncoding=utf8"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>


    <!--
        2.配置一个JPA中非常重要的对象，entityManagerFactory
        entityManager类类似于mybatis中的sqlSession
        entityManagerFactory类似于mybatis中的SqlSessionFactory
    -->
    <bean id="entityManagerFactory"  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--配置一些细节-->

        <!--数据源-->
        <property name="dataSource" ref="dataSource" />
        <!--配置包扫描（pojo实体类所在的包）-->
        <property name="packagesToScan" value="com.lagou.edu.pojo" />
        <!--指定jpa的具体实现，就是hibernate-->
        <property name="persistenceProvider">
            <bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
        </property>
        <!--jpa方言配置，不同的jpa实现对于类似beginTransaction等细节实现起来是不一样的，
        所以传入的jpaDialect的具体实现类-->
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
        </property>

        <!--配置具体provider,hibernate框架的执行细节-->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!--定义hibernate框架的一些细节-->
                <!--
                    配置数据表是否自动创建
                    因为我们会建立pojo和数据表之间的映射关系
                    程序启动时，如果数据表还没简历，是否要程序给创建一下
                -->
                <property name="generateDdl" value="false" />

                <!--
                    指定数据库的类型
                    hibernate本身是个Dao层框架，可以支持多种数据库类型的，
                    这里指定本次使用的是什么数据库
                -->
                <property name="database" value="MYSQL" />

                <!--
                    配置数据库的方言
                    hibernate可以帮助我们拼接sql语句，但是不同数据库的sql语法是不同的，
                    所以需要我们注入不同的数据库方言
                -->
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />

                <!--
                    是否显示sql
                    操作数据库时，是否打印sql
                -->
                <property name="showSql" value="true" />
            </bean>
        </property>
    </bean>

    <!--3.引用上面创建的entityManagerFactory
         <jpa:repositories>配置jpa的dao层细节
         base-package：指定dao层接口所在包
     -->
    <jpa:repositories base-package="com.lagou.edu.dao" entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager" />


    <!--4.事务管理器配置
        jdbcTemplate/mybatis，使用的是DataSourceTransactionManager
        jpa规范：JpaTransactionManager
    -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!--声5.明式事务配置
        <tx: annotation-driven />
    -->

    <!--6.配置spring包扫描-->
    <context:component-scan base-package="com.lagou.edu" />
</beans>