<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
">
    <!--开启注解扫描，扫描@Component注解-->
    <context:component-scan base-package="com.lagou.edu" />


    <!--配置springmvc视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--自动注册最合适的处理器映射器，处理器适配器（调用handler方法）
        conversion-service为类型转换器，因为hanlder是由处理器适配器调用，
        所以这里应该配在处理器适配器里。
    -->
    <mvc:annotation-driven conversion-service="converter" />

    <!--注册类型转换器-->
    <bean id="converter" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" >
        <property name="converters">
            <set>
                <bean id="dateConverter" class="com.lagou.edu.converter.DateConverter" />
            </set>
        </property>
    </bean>

    <!--
        静态资源配置方案一：
        添加该配置后，会在springmvc上下文中注册一个DefaultServletHttpRequestHandler对象，
        该对象相当于一个过滤器，会过滤掉静态资源的请求，转而让tomcat去处理。但是这种方式
        还是不能访问在classpath下的静态资源。
    -->
<!--    <mvc:default-servlet-handler />-->

    <!--
        静态资源配置方案二：Spring MVC自己处理静态资源，这样做的好处
        是可以访问到classpath下及WEB-INF下的资源
        mapping：静态资源的映射mapping。
        location：静态资源的存放路径。
    -->
    <mvc:resources mapping="/resources/**" location="classpath:/" />
    <mvc:resources mapping="/js/**" location="/WEB-INF/js/" />


    <!--注册拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--拦截的路径
                /**：表示当前目录及其子目录下的所有路径
            -->
            <mvc:mapping path="/**"/>
            <!--不拦截的路径-->
            <mvc:exclude-mapping path="/demo/handle03"/>
            <bean class="com.lagou.edu.hanlder.MyHandlerInterceptor" />
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.lagou.edu.hanlder.MyHandlerInterceptor2" />
        </mvc:interceptor>
    </mvc:interceptors>

    <!--多元素解析器
        id固定为multipartResolver
    -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
        <property name="maxUploadSize" value="5000000"  />
    </bean>
</beans>